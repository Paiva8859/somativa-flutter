// File generated by FlutterFire CLI.
// ignore_for_file: type=lint

// Importa as configurações necessárias do Firebase
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] para uso com seus aplicativos Firebase.
/// 
/// Exemplo de uso:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
// Classe que contém as opções padrão do Firebase para diferentes plataformas
class DefaultFirebaseOptions {
  /// Retorna as opções do Firebase para a plataforma atual.
  static FirebaseOptions get currentPlatform {
    // Verifica se a aplicação está sendo executada na web
    if (kIsWeb) {
      return web;
    }
    // Retorna as opções específicas com base na plataforma alvo
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        // Lança um erro caso a configuração não esteja disponível para Linux
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        // Lança um erro caso a plataforma não seja suportada
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Configurações do Firebase para a plataforma web
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBXL6kcTjXwGLt0RSuz-Y0GrBcie_zfv-I',
    appId: '1:883862595684:web:e532357030c6ad18b51771',
    messagingSenderId: '883862595684',
    projectId: 'somativa-flutter',
    authDomain: 'somativa-flutter.firebaseapp.com',
    storageBucket: 'somativa-flutter.appspot.com',
    measurementId: 'G-W1T2GFBDYC',
  );

  // Configurações do Firebase para a plataforma Android
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyChvV82q7KQBlyRW8la-SRnZbPtgbABgLo',
    appId: '1:883862595684:android:feed6ea3472c4665b51771',
    messagingSenderId: '883862595684',
    projectId: 'somativa-flutter',
    storageBucket: 'somativa-flutter.appspot.com',
  );

  // Configurações do Firebase para a plataforma iOS
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCps7jDzpQp4fUETcKFRYn4e51PonnfZ-I',
    appId: '1:883862595684:ios:69fe6e0819759c0bb51771',
    messagingSenderId: '883862595684',
    projectId: 'somativa-flutter',
    storageBucket: 'somativa-flutter.appspot.com',
    iosBundleId: 'com.example.somativaFlutter',
  );

  // Configurações do Firebase para a plataforma macOS
  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyCps7jDzpQp4fUETcKFRYn4e51PonnfZ-I',
    appId: '1:883862595684:ios:69fe6e0819759c0bb51771',
    messagingSenderId: '883862595684',
    projectId: 'somativa-flutter',
    storageBucket: 'somativa-flutter.appspot.com',
    iosBundleId: 'com.example.somativaFlutter',
  );

  // Configurações do Firebase para a plataforma Windows
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBXL6kcTjXwGLt0RSuz-Y0GrBcie_zfv-I',
    appId: '1:883862595684:web:3ff95eda3f95d2e6b51771',
    messagingSenderId: '883862595684',
    projectId: 'somativa-flutter',
    authDomain: 'somativa-flutter.firebaseapp.com',
    storageBucket: 'somativa-flutter.appspot.com',
    measurementId: 'G-TV336486M9',
  );
}
